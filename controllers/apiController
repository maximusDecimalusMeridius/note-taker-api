const express = require("express");
const router = express.Router();
const fs = require("fs");
const { v4: uuidv4 } = require('uuid');

router.get("/", (req, res) => {
    fs.readFile("./db/db.json", "utf8", (error, data) => {
        if(error){
            res.status(500).send("Error Reading File");
            throw(error);
        } else {
            notesData = JSON.parse(data);
            res.send(notesData);
        }
    })
})

router.post("/", (req, res) => {
    fs.readFile("./db/db.json", "utf8", (error, data) => {
        if(error){
            res.status(500).send("Error saving note");
            throw(error);
        } else {
            let notesData = JSON.parse(data);
            const newNote = {
                id: uuidv4(),
                title: req.body.title,
                text: req.body.text
            }
            notesData.push(newNote);
            fs.writeFile("./db/db.json", JSON.stringify(notesData, null, 4), (error) => {
                if(error){
                    res.status(500).send("Error writing file");
                    throw(error);
                } else {
                    res.status(200).send("New note added!");
                }
            })
        }
    })
})

router.delete("/:id", (req, res) => {
    fs.readFile("./db/db.json", "utf8", (error, data) => {
        if(error){
            res.status(400).send("Error deleting file");
            throw (error);
        } else {
            let notesData = JSON.parse(data);
            notesData = notesData.filter( note => req.params.id != note.id);
            fs.writeFile("./db/db.json", JSON.stringify(notesData, null, 4), (error) => {
                if(error){
                    res.status(500).send("Error writing file");
                    throw(error);
                } else {
                    res.status(200).send("Note Deleted");
                }
            })
        }
    })
})

module.exports = router;